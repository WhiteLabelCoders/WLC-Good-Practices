"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[654],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>k});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},d="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(t),u=i,k=d["".concat(l,".").concat(u)]||d[u]||y[u]||o;return t?a.createElement(k,r(r({ref:n},c),{},{components:t})):a.createElement(k,r({ref:n},c))}));function k(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=u;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[d]="string"==typeof e?e:i,r[1]=p;for(var s=2;s<o;s++)r[s]=t[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7131:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>y,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var a=t(7462),i=(t(7294),t(3905));const o={sidebar_position:2},r="Design, OOP",p={unversionedId:"Standardy PHP/design",id:"Standardy PHP/design",title:"Design, OOP",description:"Podstawy Object Oriented Programming",source:"@site/docs/Standardy PHP/design.md",sourceDirName:"Standardy PHP",slug:"/Standardy PHP/design",permalink:"/WLC-Good-Practices/en/Standardy PHP/design",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Standardy kodowania",permalink:"/WLC-Good-Practices/en/Standardy PHP/coding-standards"},next:{title:"Bezpiecze\u0144stwo",permalink:"/WLC-Good-Practices/en/Standardy PHP/security"}},l={},s=[{value:"Podstawy Object Oriented Programming",id:"podstawy-object-oriented-programming",level:2},{value:"Encapsulation",id:"encapsulation",level:3},{value:"Visibility",id:"visibility",level:3},{value:"Inheritance",id:"inheritance",level:3},{value:"Przestrzenie nazw",id:"przestrzenie-nazw",level:2},{value:"DRY",id:"dry",level:2},{value:"SOLID",id:"solid",level:2}],c={toc:s},d="wrapper";function y(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"design-oop"},"Design, OOP"),(0,i.kt)("h2",{id:"podstawy-object-oriented-programming"},"Podstawy Object Oriented Programming"),(0,i.kt)("p",null,"Plugin\xf3w nie piszemy strukturalnie (",(0,i.kt)("a",{parentName:"p",href:"https://carlalexander.ca/object-oriented-programming-next-step-wordpress-developer/"},"polecany artyku\u0142"),"), tylko wykorzystujemy podstawowe koncepty OOP, kt\xf3ry nawet na niskim poziomie pozwal\u0105 na przyzwoit\u0105 organizacj\u0119 kodu, kt\xf3ry b\u0119dzie \u0142atwiejszy (ta\u0144szy) w utrzymaniu."),(0,i.kt)("p",null,"W przypadku tworzenia customowego pluginu wymagane jest korzystanie z podstawowego boilerplate pluginu WLC (to do! sic) lub wybranego boilerplate, np. ",(0,i.kt)("a",{parentName:"p",href:"https://wppb.me/"},"wppb"),"."),(0,i.kt)("h3",{id:"encapsulation"},"Encapsulation"),(0,i.kt)("p",null,"Dane oraz zachowania w obr\u0119bie jakiej\u015b funkcjonalno\u015bci powinny by\u0107 grupowane w klasy, obiekt to instancja danej klasy (",(0,i.kt)("a",{parentName:"p",href:"https://carlalexander.ca/first-thing-learn-object-oriented-programming/"},"polecany artyku\u0142"),")."),(0,i.kt)("p",null,"Dane w obr\u0119bie klasy powinny by\u0107 definiowane jako ",(0,i.kt)("strong",{parentName:"p"},"properties, czyli zmienne")," specyficzne dla ca\u0142ej klasy."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Metody to funkcje"),", czyli zachowania specyficzne dla danej klasy, posiadaj\u0105 one bezpo\u015bredni dost\u0119p do properties."),(0,i.kt)("h3",{id:"visibility"},"Visibility"),(0,i.kt)("p",null,"Widoczno\u015b\u0107 metod i properties (mechanizm kontroli dost\u0119pu):"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Public")," - defaultowe zachowanie, metoda lub property jest w pe\u0142ni dost\u0119pna. Wszystkie metody wykorzystywane w hookach powinny by\u0107 publiczne."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Protected")," - dost\u0119p tylko w obr\u0119bie klasy definiuj\u0105cej lub klasy kt\xf3ra rozszerza (extend) klas\u0119 definiuj\u0105c\u0105."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Private")," - dost\u0119p tylko w obr\u0119bie klasy definiuj\u0105cej."),(0,i.kt)("h3",{id:"inheritance"},"Inheritance"),(0,i.kt)("p",null,"Pozwala na tworzenie re-u\u017cywalnego kodu pomi\u0119dzy klasami (",(0,i.kt)("a",{parentName:"p",href:"https://carlalexander.ca/using-inheritance-wordpress/"},"polecany artyku\u0142"),")."),(0,i.kt)("p",null,"Wykorzystanie keyword extend przy definiowaniu klasy pozwala na korzystanie z metod i properties zdefiniowanych w klasie rodzicu (np. ",(0,i.kt)("inlineCode",{parentName:"p"},"Car extends Vehicle")," lub ",(0,i.kt)("inlineCode",{parentName:"p"},"Dog extends Animal"),")."),(0,i.kt)("p",null,"Zasady wykorzystywania taka jak w sekcji Visibility."),(0,i.kt)("h2",{id:"przestrzenie-nazw"},"Przestrzenie nazw"),(0,i.kt)("p",null,"Kod PHP kt\xf3ry nie jest cz\u0119\u015bci\u0105 WordPress Template Hierarchy powinien by\u0107 organizowany w obr\u0119bie przestrzeni nazw (namespace), w celu unikni\u0119ciu konflikt\xf3w z innymi klasami i funkcjami o podobnych nazwach."),(0,i.kt)("p",null,"Deklaracja  ",(0,i.kt)("inlineCode",{parentName:"p"},"use"),"  powinna by\u0107 u\u017cywana aby korzysta\u0107 z klas i ich metod spoza przestrzeni nazw."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Temat do rozwini\u0119cia aby by\u0142 w pe\u0142ni zrozumia\u0142y")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace MyAwesomePlugin\\Api;\n\ndefined( 'ABSPATH' ) || die( 'Direct file access is forbidden' );\n\n// Make Misc class available in current namespace\nuse MyAwesomePlugin\\General\\Misc;\n\nclass Block {\n   /**\n    * Init\n    *\n    * @return void\n    */\n   public function init() {\n        // Thanks to use statement we can initiate class like this, nice!\n        $misc = new Misc();\n        // Otherwise we could do it like this, not that nice\n        $misc = new \\MyAwesomePlugin\\General\\Misc;\n        \n        $some_misc_data = $misc->get_some_data();\n   }\n}\n")),(0,i.kt)("h2",{id:"dry"},"DRY"),(0,i.kt)("p",null,"Czyli ",(0,i.kt)("strong",{parentName:"p"},"Don\u2019t Repeat Yourself"),"! "),(0,i.kt)("p",null,"DRY to koncept w programowaniu, stanowi\u0105cy, \u017ce nie powinni\u015bmy powiela\u0107 tego samego kodu w wielu miejscach, a je\u017celi widzimy, \u017ce tak si\u0119 dzieje to wsp\xf3lny kod w obr\u0119bie wielu metod powinien zosta\u0107 wyci\u0105gni\u0119ty do osobnej funkcji, do kt\xf3rej metody te b\u0119d\u0105 si\u0119 odwo\u0142ywa\u0107."),(0,i.kt)("h2",{id:"solid"},"SOLID"),(0,i.kt)("p",null,"To zbi\xf3r regu\u0142, kt\xf3re powinny by\u0107 stosowane przy tworzeniu oprogramowania w j\u0119zyku PHP, SOLID to do\u015b\u0107 zaawansowany zbi\xf3r regu\u0142, stosowanie tylko pierwszej regu\u0142y powinno znacz\u0105co wp\u0142yn\u0105\u0107 na jako\u015b\u0107 produkowanego kodu:"),(0,i.kt)("p",null,"S jak ",(0,i.kt)("strong",{parentName:"p"},"Single responsibility principle")," (",(0,i.kt)("a",{parentName:"p",href:"https://carlalexander.ca/single-responsibility-principle-wordpress/"},"polecany artyku\u0142"),") - regu\u0142a ta stonowi, i\u017c klasa lub metoda powinna robi\u0107 jedn\u0105 i tylko jedn\u0105 rzecz (pojedyncza odpowiedzialno\u015b\u0107), je\u017celi zauwa\u017cy, \u017ce metoda staje si\u0119 zbyt rozwlek\u0142a, mo\u017ce to oznacza\u0107, i\u017c tak\u0105 metod\u0119 nale\u017cy rozbi\u0107 na dwie lub wiele mniejszych, kt\xf3re b\u0119d\u0105 spe\u0142nia\u0107 konkretne zadania. "),(0,i.kt)("p",null,"O jak ",(0,i.kt)("strong",{parentName:"p"},"Open/closed principle")," - kod powinien by\u0107 zamkni\u0119ty na modyfikacje ale otwarty na rozszerzanie. W realiach WordPressa i jego plugin\xf3w zasada ta jest idealnie realizowana poprzez hooki (akcje i filtry), gdzie absolutnie zabronione jest modyfikowanie kodu bezpo\u015brednio, za to dobrze napisany plugin poznamy po tym, i\u017c wyposa\u017cony jest w hooki pozwalaj\u0105ce na jego rozszerzenie."),(0,i.kt)("p",null,"L jak Liskov substitution principle - (",(0,i.kt)("a",{parentName:"p",href:"https://accesto.com/blog/solid-php-solid-principles-in-php/"},"polecany artyku\u0142"),")"),(0,i.kt)("p",null,"I jak Interface segregation principle - (",(0,i.kt)("a",{parentName:"p",href:"https://accesto.com/blog/solid-php-solid-principles-in-php/"},"polecany artyku\u0142"),")"),(0,i.kt)("p",null,"D jak Dependency inversion principle - (",(0,i.kt)("a",{parentName:"p",href:"https://accesto.com/blog/solid-php-solid-principles-in-php/"},"polecany artyku\u0142"),")"))}y.isMDXComponent=!0}}]);