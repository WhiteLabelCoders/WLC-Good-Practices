"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[307],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>m});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function d(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),p=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},c=function(e){var a=p(e.components);return t.createElement(s.Provider,{value:a},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},y=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),l=p(n),y=r,m=l["".concat(s,".").concat(y)]||l[y]||u[y]||o;return n?t.createElement(m,i(i({ref:a},c),{},{components:n})):t.createElement(m,i({ref:a},c))}));function m(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=y;var d={};for(var s in a)hasOwnProperty.call(a,s)&&(d[s]=a[s]);d.originalType=e,d[l]="string"==typeof e?e:r,i[1]=d;for(var p=2;p<o;p++)i[p]=n[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}y.displayName="MDXCreateElement"},4390:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>p});var t=n(7462),r=(n(7294),n(3905));const o={sidebar_position:1},i="Standardy kodowania",d={unversionedId:"Standardy PHP/coding-standards",id:"Standardy PHP/coding-standards",title:"Standardy kodowania",description:"Standardy kodowania PHP oraz standardy dokumentowania kodu zosta\u0142y opisane w Codexie WordPressa i wymagana jest ich znajomo\u015b\u0107 oraz stosowanie w projektach realizowanych w White Label Coders. Zach\u0119camy do zapoznania si\u0119 ze standardami oraz wracaniem do nich od czasu do czasu.",source:"@site/docs/Standardy PHP/coding-standards.md",sourceDirName:"Standardy PHP",slug:"/Standardy PHP/coding-standards",permalink:"/WLC-Good-Practices/Standardy PHP/coding-standards",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Niestandardowe bloki",permalink:"/WLC-Good-Practices/Standardy Javascript/gutenberg-block"},next:{title:"Design, OOP",permalink:"/WLC-Good-Practices/Standardy PHP/design"}},s={},p=[{value:"Standardy kodowania WordPress",id:"standardy-kodowania-wordpress",level:2},{value:"Ustawienie Code Style",id:"ustawienie-code-style",level:3},{value:"Ustawienie Code Sniffera",id:"ustawienie-code-sniffera",level:3},{value:"Dokumentacja kodu",id:"dokumentacja-kodu",level:2}],c={toc:p},l="wrapper";function u(e){let{components:a,...n}=e;return(0,r.kt)(l,(0,t.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"standardy-kodowania"},"Standardy kodowania"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://developer.wordpress.org/coding-standards/wordpress-coding-standards/php/"},"Standardy kodowania PHP")," oraz ",(0,r.kt)("a",{parentName:"p",href:"https://developer.wordpress.org/coding-standards/inline-documentation-standards/php/"},"standardy dokumentowania kodu")," zosta\u0142y opisane w Codexie WordPressa i wymagana jest ich znajomo\u015b\u0107 oraz stosowanie w projektach realizowanych w White Label Coders. Zach\u0119camy do zapoznania si\u0119 ze standardami oraz wracaniem do nich od czasu do czasu."),(0,r.kt)("p",null,"W niniejszym dokumencie cz\u0119\u015b\u0107 standard\xf3w b\u0119dzie si\u0119 powtarza\u0142a wzgl\u0119dem tego co mo\u017cemy przeczyta\u0107 w Codexie."),(0,r.kt)("h2",{id:"standardy-kodowania-wordpress"},"Standardy kodowania WordPress"),(0,r.kt)("p",null,"Standardy kodowania dla WordPressa oraz ich sprawdzanie nale\u017cy zautomatyzowa\u0107 z poziomu Gitlaba lub/oraz z poziomu IDE, mo\u017cna to zrobi\u0107 w nast\u0119puj\u0105cy spos\xf3b:"),(0,r.kt)("h3",{id:"ustawienie-code-style"},"Ustawienie Code Style"),(0,r.kt)("p",null,"-- Konfiguracja ",(0,r.kt)("strong",{parentName:"p"},"WordPress Code Style")," dla ",(0,r.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/help/phpstorm/wordpress-aware-coding-assistance.html#configuring-wordpress-code-style"},"PhpStorm")," "),(0,r.kt)("p",null,"-- Konfiguracja ",(0,r.kt)("strong",{parentName:"p"},"WordPress Code Style")," dla Visual Studio Code"),(0,r.kt)("h3",{id:"ustawienie-code-sniffera"},"Ustawienie Code Sniffera"),(0,r.kt)("p",null,"Stosowanie ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/WordPress/WordPress-Coding-Standards"},"WordPress Coding Standards dla PHP_CodeSniffera")),", kt\xf3ry mo\u017cna skonfigurowa\u0107 na dwa sposoby:"),(0,r.kt)("p",null,"-- W repozytorium ",(0,r.kt)("strong",{parentName:"p"},"w Gitlabie")," w pliku ",(0,r.kt)("inlineCode",{parentName:"p"},".gitlab-ci.yml")," - walidacja kodu wzgl\u0119dem standard\xf3w nast\u0119puje automatycznie w momencie wypchni\u0119cia zmian do repo."),(0,r.kt)("p",null,"-- ",(0,r.kt)("strong",{parentName:"p"},"Z poziomu IDE")," - walidacja musi zosta\u0107 wywo\u0142ana r\u0119cznie. "),(0,r.kt)("p",null,"PHP_CodeSniffer posiada ",(0,r.kt)("strong",{parentName:"p"},"funkcjonalno\u015b\u0107 automatycznego poprawiania kodu")," - ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/squizlabs/PHP_CodeSniffer/wiki/Fixing-Errors-Automatically"},"PHP Code Beautifier and Fixer"),"."),(0,r.kt)("h2",{id:"dokumentacja-kodu"},"Dokumentacja kodu"),(0,r.kt)("p",null,"W White Label Coders k\u0142adziemy nacisk na ",(0,r.kt)("strong",{parentName:"p"},"w\u0142a\u015bciwe komentowanie")," / dokumentowanie kodu poprzez stosowanie DocBlok\xf3w oraz komentarzy inlinowych wewn\u0105trz funkcji i metod. Generalna zasada jest taka, \u017ce osoba nietechniczna powinna wiedzie\u0107 co robi dana funkcja  po przeczytaniu komentarzy."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"DocBloki")," powinny zawiera\u0107 minimum:"),(0,r.kt)("p",null,"-- Opis co dana funkcja robi"),(0,r.kt)("p",null,"-- ",(0,r.kt)("inlineCode",{parentName:"p"},"@param")," - opis ka\u017cdego parametru w formacie parameter type, variable name, description"),(0,r.kt)("p",null,"-- ",(0,r.kt)("inlineCode",{parentName:"p"},"@return")," - typ zwracany przez funkcj\u0119"),(0,r.kt)("p",null,"DocBlock mo\u017ce zosta\u0107 wygenerowany automatycznie w IDE poprzez wpisanie ",(0,r.kt)("inlineCode",{parentName:"p"},"/**")," oraz naci\u015bni\u0119cie przycisku enter. Je\u017celi w funkcji zastosowane zosta\u0142y deklaracje typ\xf3w, to cz\u0119\u015b\u0107 danych uzupe\u0142ni si\u0119 automatycznie."),(0,r.kt)("p",null,"Deklaracje typ\xf3w oraz deklaracja zwracanych typ\xf3w, czyli ",(0,r.kt)("strong",{parentName:"p"},"Type declaracations"),", powinny by\u0107 stosowane zar\xf3wno dla parametr\xf3w jak i zwracanego przez funkcj\u0119 typu."),(0,r.kt)("p",null,"Przyk\u0142ad:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"/**\n* Get Entry payment methods data as separate arrays of deposit and withdrawal methods\n*\n* @param int  $resource_id Post ID\n* @param bool $return_ids  If to just return IDs or data as well\n*\n* @return array\n*/\npublic function get_separated_payment_methods( int $resource_id, bool $return_ids = false ): array {\n    // function body goes here\n}\n")),(0,r.kt)("p",null,"W przypadku gdy paramter lub funkcja mo\u017ce przyjmowa\u0107 wi\u0119cej ni\u017c jeden typ, nale\u017cy rozdzieli\u0107 je znakiem ",(0,r.kt)("inlineCode",{parentName:"p"},"|"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"/**\n* Get Bonuses by Bonus Types\n*\n* @param string $post_type   Post Type\n* @param array  $bonus_types Bonus Type IDs to process\n*\n* @return array|bool\n*/\nprivate function get_bonuses_by_bonus_type( string $post_type, array $bonus_types ): array|bool {\n    // function body goes here\n}\n")))}u.isMDXComponent=!0}}]);